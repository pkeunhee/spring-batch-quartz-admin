<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
	                       http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">

   
	<!-- root context 에서 bean으로 등록될 객체 지정 -->
	<context:component-scan base-package="kr.pe.ghp.batch.service"/>
   
   
    <!-- Enable annotations-->
    <context:annotation-config/>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Use this to set additional properties on beans at run time -->
    <bean id="placeholderProperties"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:/org/springframework/batch/admin/bootstrap/batch.properties</value>
                <value>classpath:batch-default.properties</value>
                <value>classpath:batch-mysql.properties</value>
                <value>classpath:log4j.properties</value>
                <value>classpath:web-jdbc.properties</value>
            </list>
        </property>
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="false"/>
        <property name="order" value="1"/>
    </bean>

    <!-- Overrider job repository -->
    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="databaseType" value="mysql"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="tablePrefix" value="${batch.table.prefix}"/>
        <property name="maxVarCharLength" value="2000"/>
        <property name="isolationLevelForCreate" value="ISOLATION_SERIALIZABLE"/>
        <property name="transactionManager" ref="transactionManager"/>
    </bean>

    <!-- Override job service -->
    <bean id="jobService" class="org.springframework.batch.admin.service.SimpleJobServiceFactoryBean">
        <property name="tablePrefix" value="${batch.table.prefix}"/>
        <property name="jobRepository" ref="jobRepository"/>
        <property name="jobLauncher" ref="jobLauncher"/>
        <property name="jobLocator" ref="jobRegistry"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- Override job explorer -->
    <bean id="jobExplorer"
          class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean">
        <property name="tablePrefix" value="${batch.table.prefix}"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    
    
    
    
    
    
    
    
    <bean id="batchDAO" class="kr.pe.ghp.batch.dao.BatchDAO">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    
	<bean id="webDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.web.driverClassName}" />
		<property name="url" value="${jdbc.web.url}" />
		<property name="username" value="${jdbc.web.username}" />
		<property name="password" value="${jdbc.web.password}" />
		<!-- 유효 검사용 쿼리(1개 이상의 row를 반환하는 쿼리를 넣어주면 됨) -->
		<property name="validationQuery" value="select 1" />
		<!-- 컨넥션이 놀고 있을때 validationQuery 를 이용해서 유효성 검사를 할지 여부 -->
		<property name="testWhileIdle" value="true" />
		<!-- 해당 밀리초마다 validationQuery 를 이용하여 유효성 검사 진행 -->
		<property name="timeBetweenEvictionRunsMillis" value="7200000" />
	</bean>
    
	<bean id="webSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="webDataSource" />
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
	</bean>
    
	<bean id="webMapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.pe.ghp.batch.mapper" /> <!-- mapper 객체 설정 -->
		<property name="sqlSessionFactoryBeanName" value="webSqlSessionFactory" />
	</bean>
</beans>